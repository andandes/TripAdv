//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TripAdv.Repositories
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OnATripEntities : DbContext
    {
        public OnATripEntities()
            : base("name=OnATripEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Activity> Activities { get; set; }
        public virtual DbSet<ActivityActivityTypeMap> ActivityActivityTypeMaps { get; set; }
        public virtual DbSet<ActivityRating> ActivityRatings { get; set; }
        public virtual DbSet<ActivityType> ActivityTypes { get; set; }
        public virtual DbSet<Login> Logins { get; set; }
        public virtual DbSet<Trip> Trips { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<country> countries { get; set; }
        public virtual DbSet<TripMember> TripMembers { get; set; }
    
        public virtual int spCloneTrip(Nullable<int> userId, Nullable<int> tripId, Nullable<System.DateTime> startDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var tripIdParameter = tripId.HasValue ?
                new ObjectParameter("tripId", tripId) :
                new ObjectParameter("tripId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spCloneTrip", userIdParameter, tripIdParameter, startDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CheckAuthorization(string resource, string action, string role, Nullable<decimal> userID, Nullable<decimal> itemID)
        {
            var resourceParameter = resource != null ?
                new ObjectParameter("resource", resource) :
                new ObjectParameter("resource", typeof(string));
    
            var actionParameter = action != null ?
                new ObjectParameter("action", action) :
                new ObjectParameter("action", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("role", role) :
                new ObjectParameter("role", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(decimal));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("itemID", itemID) :
                new ObjectParameter("itemID", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckAuthorization", resourceParameter, actionParameter, roleParameter, userIDParameter, itemIDParameter);
        }
    }
}
